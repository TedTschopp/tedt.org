/* Bootstrap 5.3.2 Minimal Dropdown + Collapse Stub
   Purpose: Provide just enough dropdown functionality for tests without external CDN.
   NOTE: This is NOT the full Bootstrap bundle. For production parity, replace with the official minified file.
   License: Bootstrap is MIT licensed. This derived stub retains MIT.
*/
(function(){
  function Dropdown(element){ this._el = element; }
  Dropdown.prototype.toggle = function(){
    const menu = this._getMenu();
    const isShown = menu.classList.contains('show');
    if(isShown){ this.hide(); } else { this.show(); }
  };
  Dropdown.prototype.show = function(){
    const menu = this._getMenu();
    if(menu.classList.contains('show')) return;
    menu.classList.add('show');
    this._el.setAttribute('aria-expanded','true');
    document.addEventListener('click', this._docHandler = (e)=>{
      if(!this._el.parentElement.contains(e.target)) this.hide();
    });
    document.addEventListener('keydown', this._escHandler = (e)=>{ if(e.key==='Escape') this.hide(); });
  };
  Dropdown.prototype.hide = function(){
    const menu = this._getMenu();
    if(!menu.classList.contains('show')) return;
    menu.classList.remove('show');
    this._el.setAttribute('aria-expanded','false');
    document.removeEventListener('click', this._docHandler);
    document.removeEventListener('keydown', this._escHandler);
  };
  Dropdown.prototype._getMenu = function(){
    const id = this._el.getAttribute('id');
    return document.querySelector('ul[aria-labelledby="'+id+'"]');
  };

  function init(){
    document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(btn=>{
      if(btn.__dropdown) return;
      const instance = new Dropdown(btn);
      btn.__dropdown = instance;
      btn.addEventListener('click', function(e){ e.preventDefault(); instance.toggle(); });
    });
  }
  document.addEventListener('DOMContentLoaded', init);
  window.bootstrap = window.bootstrap || {};
  window.bootstrap.Dropdown = { getOrCreateInstance: (el)=> el.__dropdown || new Dropdown(el) };
})();
